The Map interface present in java.util package represents a mapping between a key and a value
A map cannot contain duplicate keys. And, each key is associated with a single value.

[Imgae] of MAP

We can access and modify values using the keys associated with them.
In the above diagram, we have values: United States, Brazil, and Spain.
And we have corresponding keys: us, br, and es 
Now, we can access those values using their corresponding keys.







Note: The Map interface maintains 3 different sets:

the set of keys
the set of values
the set of key/value associations (mapping).



>>>>>>
Intro ????
A Map an interface that stores data in key and value association. The key must be unique but the values can be duplicate. 
Map in Java is an interface available in java.util package and it stores the data in key and value pairs. It does not allow duplicate keys.
'
The Map interface represents a mapping between a key and a value
In map each key is associated with a single value.
So we can't say : new map() 
A Map doesn't allow duplicate keys, but you can have duplicate values.

[Imgae] of MAP

A Map is useful if you have to search, update or delete elements on the basis of a key.

????

 The map interface in Java is often misunderstood as being a subtype of 
the Collections interface. But that is not true, and hence, the Java map functions differently from the Collection interface.
Since Map is an interface, we cannot create objects from it



--

>>

There are two interfaces for implementing Map in java:
 Map and SortedMap, 
and three classes: HashMap, LinkedHashMap, and TreeMap




HashMap and LinkedHashMap allow null keys and values,
but TreeMap doesn't allow any null key or value.



A Map can't be traversed, so you need to convert it into Set using keySet() or entrySet() method

>>
How to use Map?
In Java, we must {import the java.util.Map} package in order to use Map. Once we import the package, here's how we can create a map.

